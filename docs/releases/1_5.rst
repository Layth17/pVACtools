Version 1.5
===========

1.5.0
-----

This version adds the following features:

- This version introduces a new tool, ``pVACbind``, which can be used
  to run our immunotherapy pipeline with a peptides
  FASTA file as input. This new tool is similar to pVACseq but certain
  options and filters are removed:

  - All input sequences are interpreted in isolation so corresponding
    wildtype sequence and score information are not assigned. As a consequence,
    the filter threshold option on fold change is removed.
  - Because the input format doesn't allow for association of readcount,
    expression or transcript support level data, pVACbind doesn't run the coverage
    filter or transcript support level filter.
  - No condensed report is generated.

  Please see the :ref:`pvacbind` documentation for more information.

- pVACfuse now support annotated fusion files from `AGFusion <https://github.com/murphycj/AGFusion>`_ as input. The
  :ref:`pvacfuse` documentation has been updated with instructions on how to
  run AGFusion in the Prerequisites section.
- The top score filter has been updated to take into account alternative known
  transcripts that might result in non-indentical peptide sequences/epitopes.
  The top score filter now picks the best epitope for every available transcript of a
  variant. If the resulting list of epitopes for one variant is not identical,
  the filter will output all eptiopes. If the resulting list of epitopes for one
  variant are identical, the filter only outputs the epitope for the transcript with the highest
  transcript expression value. If no expression data is available, or if
  multiple transcripts remain, the filter outputs the epitope for the
  transcripts with the lowest transcript Ensembl ID.
- This version adds a few new options to the ``pvacseq
  generate_protein_fasta`` command:

  - The ``--mutant-only`` option can be used to only output mutant peptide
    sequences instead of mutant and wildtype sequences.
  - This command now has an option to provide a pVACseq all_eptiopes or
    filtered TSV file as an input (``--input-tsv``). This will limit the
    output fasta to only sequences that originated from the variants in that file.

- This release adds a ``pvacfuse generate_protein_fasta`` command that works
  similarly to the ``pvacseq generate_protein_fasta`` command but works with
  Integrate-NEO or AGFusion input files.
- We removed the sorting of the all_epitopes result file in order to reduce
  memory usage. Only the filtered files will be sorted. This version also updates the sorting algorithm of the
  filtered files as follows:

  - If the ``--top-score-metric`` is set to ``median`` the results are first
    sorted by the ``Median MT Score``. If multiple epitopes have the same
    ``Median MT Score`` they are then sorted by the ``Corresponding Fold
    Change``. The last sorting criteria is the ``Best MT Score``.
  - If the ``--top-score-metric`` is set to ``lowest`` the results are first
    sorted by the ``Best MT Score``. If multiple epitopes have the same
    ``Best MT Score`` they are then sorted by the ``Corresponding Fold
    Change``. The last sorting criteria is the ``Median MT Score``.

- pVACseq, pVACfuse, and pVACbind now calculate manufacturability metrics
  for the predicted epitopes. Manufacturability metrics are also
  calculated for all protein sequences when running the ``pvacseq generate_protein_fasta``
  and ``pvacfuse generate_protein_fasta`` commands. They are saved in the ``.manufacturability.tsv``
  along to the result fasta.
- The pVACseq score that gets calculated for epitopes in the condensed report
  is now converted into a rank. This will hopefully remove any confusion about
  whether the previous score could be treated as an absolute measure of
  immunogencity, which it was not intended for. Converting this score to a
  rank ensures that it gets treated in isolation for only the epitopes in the
  condensed file.
- The condensed report now also outputs the mutation position as well as the
  full set of lowest and median wildtype and mutant scores.
- This version adds a clear cache function to pVACapi that can be called by
  running ``pvacapi clear_cache``. Sometimes pVACapi can get into a state
  where the cache file contains conflicting data compared to the actual
  process outputs which results in errors. Clearing the cache using the ``pvacapi clear_cache``
  function can be used in that situation to resolve these errors.

1.5.1
-----

This is a hotfix release. It fixes the following issues:

- There was a syntax error in
  ``tools/pvacseq/generate_condensed_ranked_report.py`` that would result in
  an error when running the ``pvacseq generate-condensed-ranked-report``
  commands.
- We were previously not correctly catching cases where the intermediate fasta for
  making binding prediction was empty. This would result in errors downstream.

1.5.2
-----

This is a hotfix release. It fixes the following issues:

- AGFusion exon files may be comma-delimited. Previously, the file parser
  assumed the files were tab-delimited. This release now allows AGFusion
  inputs that are comma- or tab-delimited.

1.5.3
-----

This is a hotfix release. It fixes the following issues:

- pVACbind would previously throw an error if a peptide sequence in the input
  fasta was shorter than one of the chosen epitope lengths. This issue has
  been fixed by first parsing the input fasta and creating individual fasta
  files for each epitope length that enforce a minimum length of the peptide
  sequences matching the respective epitope length.
- Previous versions of pVACtools resolved an issue where IEDB would output a
  warning line if one of the epitope sequences only contained A, C, G, or T
  amino acids, since those sequences could also be nuclotide sequences.
  However, this issue was only fixed in pVACseq, not pVACbind, or pVACvector.
  This release fixes this issue for all tools.
- The wrappers for NetChop or NetMHCstabpan split the set of input epitopes
  into chunks of 100 before processing. Due to a bug in the file splitting
  logic, one epitope for each chunk over 100 would be errenously dropped. This
  effectively would result in less epitopes being returned in the filtered
  report than if running the pipelines without NetChop or NetMHCstabpan.

1.5.4
-----

This is a hotfix release. It fixes the following issues:

- The ``pvacseq generate_protein_fasta`` command would previously error out
  when running with a selected ``peptide_sequence_length`` that would reduce
  in peptides < 7 amino acids long. This error would occur when calculating
  manufacturability metrics. This release now only calculates these metrics
  for peptides >=7 amino acids long.
- We updated the calculation for the flanking sequence length when generating
  peptide sequences to result in peptides that are closer in length to the
  requested ``peptide_sequence_length``.
- This release fixes an edge case where a frameshift mutation impacted the
  first amino acid of a transcript. This case would previously throw a fatal
  error but will now be processed as expected.

1.5.5
-----

This is a hotfix release. It fixes the following issues:

- The ``pvacfuse run`` command would previously output a misleading warning
  message if an AGFusion input directory didn't contain any processable fusion
  entries. This warning message has been fixed.
- Between VEP versions, the Downstream protein sequence prediction for some
  frameshift mutations was changed to now include a leading wildtype amino
  acid. This potential difference in VEP-predicted Downstream protein
  sequences was not accounted for and would result in frameshift mutation
  protein prediction that would duplicate this leading wildtype amino acid.
  This version updates our prediction pipeline to remove this duplicated amino
  acid and output a fatal error if the Downstream protein sequence does not
  contain the leading wildtype amino acid.

1.5.6
-----

This is a hotfix release. It fixes the following issues:

- The ``pvacbind run`` command would previously error out if one of the input
  sequences would contain a X stop codon. This update will remove the X amino
  acid and the downstream sequence before further processing the remaining
  protein sequence.
- A bug in the ``pvacfuse top_score_filter`` code would previsouly result
  in an error when trying to run this command. This has now been fixed.

1.5.7
-----

This is a hotfix release. It fixes the following issues:

- The ``pvacbind run`` command would previously allow fasta input files with
  duplicated headers. However, it would silently skip subsequent entries with
  duplicated headers even if the fasta sequence was novel. With this release
  pVACbind will now error out if a duplicate fasta header is encounterd.

1.5.8
-----

This is a hotfix release. It fixes the following issues:

- The ``pvacseq run``, ``pvacfuse run``, and ``pvacbind run`` commands would
  previously error out when running with both MHC class I and MHC class II
  algorithms but one or the other would not produce an all_eptiopes.tsv file.
  This version fixes this bug.
- MHCflurry version 1.6.0 and higher changed the output file headers. This
  would cause errors when trying to parse these output files. pVACtools now
  supports both the old and the new headers.
- AGFusion updated their output file naming convention in newer versions and
  is now outputting .exons.csv files instead of .exons.txt files.
  pVACfuse is now able to process either version.

1.5.9
-----

- Some variant consequences supported by pVACseq would not actually result in
  a amino acid change (e.g.,
  ``inframe_insertion&incomplete_terminal_codon_variant``). These types of
  variants were not being filtered out correctly and would cause an error when
  trying to create the peptide fasta sequences. This issue has been fixed and
  these variants are now being filtered out upstream.
- Running pVACseq on a non-human VCF would cause an error in the top score
  filter since the transcript identifiers would not match the expected format.
  This has been fixed and the top score filter now supports non-human
  transcripts.
- There was an error in setting up the standalone ``pvacfuse
  generate_protein_fasta`` command which would result in an error when trying
  to run this command. This has now been fixed.

1.5.10
------

This is a hotfix release. It fixes the following issues:

- A stray character at the end of one file was causing a syntax error in Python
  3.8. The character has been removed. pVACtools should now be 3.8 compatible
  although some dependecies might not be compatible yet.
